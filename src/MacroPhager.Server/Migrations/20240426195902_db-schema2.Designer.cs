// <auto-generated />
using System;
using MacroPhager.Server;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MacroPhager.Server.Migrations
{
    [DbContext(typeof(MacroPhagerContext))]
    [Migration("20240426195902_db-schema2")]
    partial class dbschema2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MacroPhager.Server.Account", b =>
                {
                    b.Property<string>("username")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("first_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("img_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("last_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("macro_goal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("profile_picture")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<float>("tdee")
                        .HasColumnType("real");

                    b.HasKey("username");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("MacroPhager.Server.DailyLog", b =>
                {
                    b.Property<string>("log_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FoodItemfood_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateOnly>("date")
                        .HasColumnType("date");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("log_id");

                    b.HasIndex("FoodItemfood_id");

                    b.HasIndex("username");

                    b.ToTable("DailyLogs");
                });

            modelBuilder.Entity("MacroPhager.Server.FoodItem", b =>
                {
                    b.Property<string>("food_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("calories")
                        .HasColumnType("real");

                    b.Property<float>("carbohydrate")
                        .HasColumnType("real");

                    b.Property<string>("created_by")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<float>("fat")
                        .HasColumnType("real");

                    b.Property<string>("food_description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<float>("protein")
                        .HasColumnType("real");

                    b.Property<float>("serving_size")
                        .HasColumnType("real");

                    b.HasKey("food_id");

                    b.HasIndex("created_by");

                    b.ToTable("FoodItems");
                });

            modelBuilder.Entity("MacroPhager.Server.Friend", b =>
                {
                    b.Property<string>("friendship_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("friend_username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("friendship_id");

                    b.HasIndex("username");

                    b.ToTable("Friends");
                });

            modelBuilder.Entity("MacroPhager.Server.LoggedFood", b =>
                {
                    b.Property<string>("logged_food_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("food_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("log_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("logged_serving")
                        .HasColumnType("real");

                    b.HasKey("logged_food_id");

                    b.HasIndex("food_id");

                    b.HasIndex("log_id");

                    b.ToTable("LoggedFoods");
                });

            modelBuilder.Entity("MacroPhager.Server.Meal", b =>
                {
                    b.Property<string>("meal_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("created_by")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("meal_id");

                    b.HasIndex("created_by");

                    b.ToTable("Meals");
                });

            modelBuilder.Entity("MacroPhager.Server.MealFood", b =>
                {
                    b.Property<string>("meal_food_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("food_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("meal_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<float>("saved_serving")
                        .HasColumnType("real");

                    b.HasKey("meal_food_id");

                    b.HasIndex("food_id");

                    b.HasIndex("meal_id");

                    b.ToTable("MealFoods");
                });

            modelBuilder.Entity("MacroPhager.Server.Post", b =>
                {
                    b.Property<string>("post_id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("posted_by")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("time_stamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("post_id");

                    b.HasIndex("posted_by");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("MacroPhager.Server.DailyLog", b =>
                {
                    b.HasOne("MacroPhager.Server.FoodItem", null)
                        .WithMany("DailyLogs")
                        .HasForeignKey("FoodItemfood_id");

                    b.HasOne("MacroPhager.Server.Account", "Account")
                        .WithMany("DailyLogs")
                        .HasForeignKey("username")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("MacroPhager.Server.FoodItem", b =>
                {
                    b.HasOne("MacroPhager.Server.Account", "Account")
                        .WithMany("FoodItems")
                        .HasForeignKey("created_by")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("MacroPhager.Server.Friend", b =>
                {
                    b.HasOne("MacroPhager.Server.Account", "Account")
                        .WithMany("Friends")
                        .HasForeignKey("username")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("MacroPhager.Server.LoggedFood", b =>
                {
                    b.HasOne("MacroPhager.Server.FoodItem", "FoodItem")
                        .WithMany("LoggedFoods")
                        .HasForeignKey("food_id");

                    b.HasOne("MacroPhager.Server.DailyLog", "DailyLog")
                        .WithMany("LoggedFoods")
                        .HasForeignKey("log_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DailyLog");

                    b.Navigation("FoodItem");
                });

            modelBuilder.Entity("MacroPhager.Server.Meal", b =>
                {
                    b.HasOne("MacroPhager.Server.Account", "Account")
                        .WithMany("Meals")
                        .HasForeignKey("created_by")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("MacroPhager.Server.MealFood", b =>
                {
                    b.HasOne("MacroPhager.Server.FoodItem", "FoodItem")
                        .WithMany("MealFoods")
                        .HasForeignKey("food_id");

                    b.HasOne("MacroPhager.Server.Meal", "Meal")
                        .WithMany("MealFoods")
                        .HasForeignKey("meal_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FoodItem");

                    b.Navigation("Meal");
                });

            modelBuilder.Entity("MacroPhager.Server.Post", b =>
                {
                    b.HasOne("MacroPhager.Server.Account", "Account")
                        .WithMany("Posts")
                        .HasForeignKey("posted_by")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("MacroPhager.Server.Account", b =>
                {
                    b.Navigation("DailyLogs");

                    b.Navigation("FoodItems");

                    b.Navigation("Friends");

                    b.Navigation("Meals");

                    b.Navigation("Posts");
                });

            modelBuilder.Entity("MacroPhager.Server.DailyLog", b =>
                {
                    b.Navigation("LoggedFoods");
                });

            modelBuilder.Entity("MacroPhager.Server.FoodItem", b =>
                {
                    b.Navigation("DailyLogs");

                    b.Navigation("LoggedFoods");

                    b.Navigation("MealFoods");
                });

            modelBuilder.Entity("MacroPhager.Server.Meal", b =>
                {
                    b.Navigation("MealFoods");
                });
#pragma warning restore 612, 618
        }
    }
}
